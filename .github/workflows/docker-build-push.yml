name: Build and Push Docker Images

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag for the images'
        required: false
        default: 'latest'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: main
    strategy:
      matrix:
        include:
          - platform: cpu
            dockerfile: Dockerfile.cpu
            tag_suffix: cpu
          - platform: nvidia
            dockerfile: Dockerfile.nvidia
            tag_suffix: nvidia
          - platform: amd
            dockerfile: Dockerfile.amd
            tag_suffix: amd
      # Add failure tolerance - continue with other builds if one fails
      fail-fast: false
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          buildkitd-flags: --debug

      # Add retry logic for DockerHub login
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/helios-benchmark
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=raw,value=${{ github.event.inputs.version || 'latest' }}

      # Add retry logic and timeout for build step
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/helios-benchmark:${{ matrix.tag_suffix }}-${{ github.event.inputs.version || 'latest' }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha


  # Build and push a combined manifest for multi-architecture support
  create-manifest:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    
    steps:
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Create and push manifest
        run: |
          VERSION=${{ github.event.inputs.version || 'latest' }}
          
          # Create a manifest for the combined image
          docker manifest create \
            ${{ secrets.DOCKERHUB_USERNAME }}/helios-benchmark:${VERSION} \
            ${{ secrets.DOCKERHUB_USERNAME }}/helios-benchmark:cpu-${VERSION} \
            ${{ secrets.DOCKERHUB_USERNAME }}/helios-benchmark:nvidia-${VERSION} \
            ${{ secrets.DOCKERHUB_USERNAME }}/helios-benchmark:amd-${VERSION}
            
          # Push the manifest
          docker manifest push ${{ secrets.DOCKERHUB_USERNAME }}/helios-benchmark:${VERSION}
